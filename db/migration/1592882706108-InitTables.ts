import {MigrationInterface, QueryRunner} from "typeorm";

export class InitTables1592882706108 implements MigrationInterface {
    name = 'InitTables1592882706108'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "password_rules" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "name" character varying(25) NOT NULL, "min_lenght" integer, "special_chars_num" integer, "capital_letters_num" integer, "lower_letters_num" integer, "numbers_num" integer, "attemps" integer, "previous_valid_num" integer, CONSTRAINT "PK_295ba7bdeaa5c6a8ad49f6209e8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "option" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "menu_name" character varying(100) NOT NULL, "screen_name" character varying(100) NOT NULL, "parentId" integer, CONSTRAINT "PK_e6090c1c6ad8962eea97abdbe63" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "option_profile" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "apply_audit" boolean, "profileId" integer, "optionId" integer, CONSTRAINT "PK_e9126b9adac6b40bc68456cb0a8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "profile" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "profile" character varying(25) NOT NULL, "detail" character varying(100), "apply_pass_history" boolean, "passwordRulesId" integer, CONSTRAINT "PK_3dd8bfc97e4a77c70971591bdcb" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "password_period" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(100) NOT NULL, "days_num" integer NOT NULL, CONSTRAINT "PK_8c5164af0b548b1e242d80ca6ba" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user_password" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "audit_date" date, "expiration_date" date, "password" character varying(100) NOT NULL, "userId" uuid, "passwordPeriodId" integer, CONSTRAINT "REL_3e755bee2cdcee50a9e742776d" UNIQUE ("userId"), CONSTRAINT "PK_2d2fbddb3cc97260cdf59651754" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying(50) NOT NULL, "email" character varying NOT NULL, "expiration_date" date, "locked" boolean, "password_change" boolean, "theme" character varying(25) NOT NULL, "photo" bytea, "profileId" integer, CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"), CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "audit_action" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "name" character varying(50) NOT NULL, "detail" character varying(100) NOT NULL, CONSTRAINT "PK_d326a2c83904d70e653075c8e1f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "audit_access" ("id" SERIAL NOT NULL, "audit_date" TIMESTAMP WITH TIME ZONE NOT NULL, "ip" character varying(25) NOT NULL, "action" character varying(50) NOT NULL, "userId" uuid, "auditActionId" integer, CONSTRAINT "PK_88dc34e8717729f46d695a80bb1" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "audit" ("id" SERIAL NOT NULL, "audit_date" TIMESTAMP WITH TIME ZONE NOT NULL, "sql_text" text NOT NULL, "screen" character varying(100) NOT NULL, "ip" character varying(25) NOT NULL, "action" character varying(25) NOT NULL, "table" character varying(50) NOT NULL, "primary" character varying(50) NOT NULL, "userId" uuid, "optionId" integer, CONSTRAINT "PK_1d3d120ddaf7bc9b1ed68ed463a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "email_server" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "user" character varying(50) NOT NULL, "email" character varying(50) NOT NULL, "password" character varying(50) NOT NULL, "smtp_address" character varying(50) NOT NULL, "port" character varying(100) NOT NULL, CONSTRAINT "PK_7e3efb8a5655ed259f6db64af02" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "params" ("id" SERIAL NOT NULL, "name" character varying(25) NOT NULL, "detail" character varying(100) NOT NULL, "value" character varying(100) NOT NULL, "table" character varying(50), "code_field" character varying(50) NOT NULL, "detail_field" character varying(50) NOT NULL, "apply_table" boolean NOT NULL, "moduleId" integer, CONSTRAINT "PK_54f49c25753910452dedc4df0f0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "admin_module" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(100) NOT NULL, CONSTRAINT "PK_2a4e0af11324bed9391792b9892" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "admin_report" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "name" character varying(100) NOT NULL, "path" character varying NOT NULL, "optionId" integer, CONSTRAINT "PK_b11b2752bd84d100d99955b651e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "profile_report" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "profileId" integer, "reportId" integer, CONSTRAINT "PK_7c07cd24613ea6a88d49b0b2eb9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "password_history" ("id" SERIAL NOT NULL, "audit_datetime" TIMESTAMP WITH TIME ZONE, "ip" character varying(25) NOT NULL, "userId" uuid, CONSTRAINT "PK_da65ed4600e5e6bc9315754a8b2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "days" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(25) NOT NULL, CONSTRAINT "PK_c2c66eb46534bea34ba48cc4d7f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "province" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(25) NOT NULL, CONSTRAINT "PK_4f461cb46f57e806516b7073659" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "city" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(25) NOT NULL, "provinceId" integer, CONSTRAINT "PK_b222f51ce26f7e5ca86944a6739" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "business_type" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(25) NOT NULL, CONSTRAINT "PK_dcc57dda934350221e1ff807bfa" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "state" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(25) NOT NULL, CONSTRAINT "PK_549ffd046ebab1336c3a8030a12" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "commercial" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "name" character varying(100) NOT NULL, "ruc" character varying(13) NOT NULL, "owner" character varying(100) NOT NULL, "email" character varying(25) NOT NULL, "phone" character varying(25) NOT NULL, "cellphone" character varying(25) NOT NULL, "address" character varying(100) NOT NULL, "entry_date" date NOT NULL, "end_date" date NOT NULL, "abbr" character varying(25) NOT NULL, "photo" bytea NOT NULL, "lon" character varying(50) NOT NULL, "lat" character varying(50) NOT NULL, "cityId" integer, "typeId" integer, "stateId" integer, CONSTRAINT "PK_986cd0474c9df93193563aab298" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "attention_days" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "start_time" TIME NOT NULL, "end_time" TIME NOT NULL, "commercialId" integer, "daysId" integer, CONSTRAINT "PK_c9ee78bec29b4e5d4ab7e1d44f4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "bank" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(50) NOT NULL, "code" character varying(25) NOT NULL, "abbr" character varying(25) NOT NULL, CONSTRAINT "PK_7651eaf705126155142947926e8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "cash_box" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(25) NOT NULL, CONSTRAINT "PK_4a1c587480e8ecc79e8415ee90f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "commercial_cashbox" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "abbr" character varying(25) NOT NULL, "cashboxId" integer, "commercialId" integer, CONSTRAINT "PK_4f1d09475e9e726868cfd8324cd" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "identity_document" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(25) NOT NULL, CONSTRAINT "PK_8f722d58267c66e264dd076e7dc" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "cashier" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "names" character varying(50) NOT NULL, "document" character varying(25) NOT NULL, "birth_date" date NOT NULL, "genre" character varying(25) NOT NULL, "email" character varying(25) NOT NULL, "cellphone" character varying(10) NOT NULL, "phone" character varying(25) NOT NULL, "address" character varying(100) NOT NULL, "commercialCashboxId" integer, "commercialId" integer, "identityDocId" integer, "stateId" integer, "userId" uuid, CONSTRAINT "PK_c90575bda3993c4112a4d50e94e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payment_method" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" character varying(25) NOT NULL, CONSTRAINT "PK_7744c2b2dd932c9cf42f2b9bc3a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "cashier_payment" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "start_range" numeric(15,2) NOT NULL, "end_range" numeric(15,2) NOT NULL, "value" numeric(15,2) NOT NULL, "cashierId" integer, "paymentMethodId" integer, CONSTRAINT "PK_10a80815044d9ba3ab55821ec75" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "department" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "name" character varying(100) NOT NULL, "name_base" character varying(100) NOT NULL, CONSTRAINT "PK_9a2213262c1593bffb581e382f5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "charges" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "detail" text NOT NULL, "name" character varying(50) NOT NULL, "document" character varying(25) NOT NULL, "code" character varying(25) NOT NULL, "emission_date" date NOT NULL, "expiration_date" date NOT NULL, "title_date" date NOT NULL, "payment_date" date NOT NULL, "payment_time" TIME NOT NULL, "payment_number" character varying(25) NOT NULL, "value" numeric(15,2) NOT NULL, "department_value" numeric(15,2) NOT NULL, "payment_value" numeric(15,2) NOT NULL, "ip_charge" character varying(25) NOT NULL, "email" character varying(25) NOT NULL, "cellphone" character varying(25) NOT NULL, "departmentId" integer, "stateId" integer, "cashierId" integer, "cashboxId" integer, "commercialId" integer, "webStateId" integer, "bankId" integer, "paymentMethodId" integer, CONSTRAINT "PK_0c6feb10df0fa460714f8464dce" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "commercial_payment" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "deposit_date" date NOT NULL, "receipt_number" character varying(25) NOT NULL, "receipt_photo" bytea NOT NULL, "value" numeric(15,2) NOT NULL, "active_date" date NOT NULL, "active_user" character varying(50) NOT NULL, "active_ip" character varying(25) NOT NULL, "observation" text NOT NULL, "bankId" integer, "paymentMethodId" integer, "stateId" integer, "commercialId" integer, CONSTRAINT "PK_93940bd7be279c46f48edebae6c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "department_pay" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "start_range" numeric(15,2) NOT NULL, "end_range" numeric(15,2) NOT NULL, "value" numeric(15,2) NOT NULL, "departmentId" integer, CONSTRAINT "PK_780ef09424d9ea8ecb420502bd0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payment" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "start_range" numeric(15,2) NOT NULL, "end_range" numeric(15,2) NOT NULL, "value" numeric(15,2) NOT NULL, "paymentMethodId" integer, "commercialId" integer, CONSTRAINT "PK_fcaec7df5adf9cac408c686b2ab" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "xls_file" ("is_active" boolean NOT NULL DEFAULT true, "register_user" character varying, "register_datetime" TIMESTAMP WITH TIME ZONE, "update_user" character varying, "update_datetime" TIMESTAMP WITH TIME ZONE, "id" SERIAL NOT NULL, "doc_number" character varying(25) NOT NULL, "document" character varying(25) NOT NULL, "name" character varying(25) NOT NULL, "email" character varying(25) NOT NULL, "phone" character varying(10) NOT NULL, "detail" character varying(100) NOT NULL, "detail2" character varying(100) NOT NULL, "detail3" character varying(100) NOT NULL, "detail4" character varying(100) NOT NULL, "upload_date" date NOT NULL, "emission_date" date NOT NULL, "expires_date" date NOT NULL, "location_code" character varying(25) NOT NULL, "institution" character varying(50) NOT NULL, "value" numeric(15,2) NOT NULL, "stateId" integer, CONSTRAINT "PK_f78529657249bcf93aa9bc58a33" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "option_closure" ("id_ancestor" integer NOT NULL, "id_descendant" integer NOT NULL, CONSTRAINT "PK_daab275383483b0124405e2f274" PRIMARY KEY ("id_ancestor", "id_descendant"))`);
        await queryRunner.query(`CREATE INDEX "IDX_fd3caea6fe0fdd5d3e0929d1b3" ON "option_closure" ("id_ancestor") `);
        await queryRunner.query(`CREATE INDEX "IDX_f76ce66cb50f6aae338016e41d" ON "option_closure" ("id_descendant") `);
        await queryRunner.query(`ALTER TABLE "option" ADD CONSTRAINT "FK_18c19c0a19ad349cf6678fd69c8" FOREIGN KEY ("parentId") REFERENCES "option"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "option_profile" ADD CONSTRAINT "FK_df34371ad87c5a7b403ce8e7836" FOREIGN KEY ("profileId") REFERENCES "profile"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "option_profile" ADD CONSTRAINT "FK_17eb01a8dbb7f212821faa1703e" FOREIGN KEY ("optionId") REFERENCES "option"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "profile" ADD CONSTRAINT "FK_53b3cc51b5b38e7e5609ea49a0a" FOREIGN KEY ("passwordRulesId") REFERENCES "password_rules"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_password" ADD CONSTRAINT "FK_3e755bee2cdcee50a9e742776d8" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_password" ADD CONSTRAINT "FK_e15d9db04d04eb59c6597697c50" FOREIGN KEY ("passwordPeriodId") REFERENCES "password_period"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_9466682df91534dd95e4dbaa616" FOREIGN KEY ("profileId") REFERENCES "profile"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "audit_access" ADD CONSTRAINT "FK_b625212b77f2d6153f01e82a4c7" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "audit_access" ADD CONSTRAINT "FK_d6e6196a54bb64cb4014068b174" FOREIGN KEY ("auditActionId") REFERENCES "audit_action"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "audit" ADD CONSTRAINT "FK_7ae389e858ad6f2c0c63112e387" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "audit" ADD CONSTRAINT "FK_03685c4b397ab3fee9de97673f4" FOREIGN KEY ("optionId") REFERENCES "option"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "params" ADD CONSTRAINT "FK_6501d81725e2b9df1aea038e1f4" FOREIGN KEY ("moduleId") REFERENCES "admin_module"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "admin_report" ADD CONSTRAINT "FK_e65938f392a49a5686e4188c247" FOREIGN KEY ("optionId") REFERENCES "option"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "profile_report" ADD CONSTRAINT "FK_cc64c5baf7f4a88a4d737f111a6" FOREIGN KEY ("profileId") REFERENCES "profile"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "profile_report" ADD CONSTRAINT "FK_2a82bd16ea4f72e6f900db29eed" FOREIGN KEY ("reportId") REFERENCES "admin_report"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "password_history" ADD CONSTRAINT "FK_20c510e5ca12f63b0c915c3e2df" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "city" ADD CONSTRAINT "FK_95959bed787b5e4fd4be4e94fc5" FOREIGN KEY ("provinceId") REFERENCES "province"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "commercial" ADD CONSTRAINT "FK_96519666e75c9734c152e64e2b7" FOREIGN KEY ("cityId") REFERENCES "city"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "commercial" ADD CONSTRAINT "FK_68af99d044de3a56a76310d3f0b" FOREIGN KEY ("typeId") REFERENCES "business_type"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "commercial" ADD CONSTRAINT "FK_67f64de251b013f65023a4f6283" FOREIGN KEY ("stateId") REFERENCES "state"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attention_days" ADD CONSTRAINT "FK_a2e56659d42c1752ff6a87885ce" FOREIGN KEY ("commercialId") REFERENCES "commercial"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attention_days" ADD CONSTRAINT "FK_974da6a4406896e0dd85f62576a" FOREIGN KEY ("daysId") REFERENCES "days"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "commercial_cashbox" ADD CONSTRAINT "FK_b34f0934cb67d841eece13fd065" FOREIGN KEY ("cashboxId") REFERENCES "cash_box"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "commercial_cashbox" ADD CONSTRAINT "FK_71e09545e0b640e4bade877f698" FOREIGN KEY ("commercialId") REFERENCES "commercial"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cashier" ADD CONSTRAINT "FK_f8506c17ca5cfd69134a8d54fb8" FOREIGN KEY ("commercialCashboxId") REFERENCES "commercial_cashbox"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cashier" ADD CONSTRAINT "FK_75deea0c4caf43ba3b6c53987e3" FOREIGN KEY ("commercialId") REFERENCES "commercial"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cashier" ADD CONSTRAINT "FK_1d95a2011272afd6a95210f6535" FOREIGN KEY ("identityDocId") REFERENCES "identity_document"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cashier" ADD CONSTRAINT "FK_de135e36ae671a853e9cea66690" FOREIGN KEY ("stateId") REFERENCES "state"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cashier" ADD CONSTRAINT "FK_aefe7e456026b84732ed7edc98d" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cashier_payment" ADD CONSTRAINT "FK_e39dc438723249a00e84b356e8d" FOREIGN KEY ("cashierId") REFERENCES "cashier"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cashier_payment" ADD CONSTRAINT "FK_7bb5f2cf3346495f0a0966c733d" FOREIGN KEY ("paymentMethodId") REFERENCES "payment_method"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "charges" ADD CONSTRAINT "FK_7836e773f1549f5890ec2aafb3b" FOREIGN KEY ("departmentId") REFERENCES "department"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "charges" ADD CONSTRAINT "FK_36e9bc15d63f491c54c345b7738" FOREIGN KEY ("stateId") REFERENCES "state"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "charges" ADD CONSTRAINT "FK_5598088f9b4c31308a35ab3175b" FOREIGN KEY ("cashierId") REFERENCES "cashier"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "charges" ADD CONSTRAINT "FK_f263633fb0c31efe64ddd2db256" FOREIGN KEY ("cashboxId") REFERENCES "cash_box"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "charges" ADD CONSTRAINT "FK_fb99f10f1b89f3f3c9d77f0958c" FOREIGN KEY ("commercialId") REFERENCES "commercial"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "charges" ADD CONSTRAINT "FK_44c6324c0516c84c2af6925479f" FOREIGN KEY ("webStateId") REFERENCES "state"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "charges" ADD CONSTRAINT "FK_8211bae623dccba30c5bdd538a1" FOREIGN KEY ("bankId") REFERENCES "bank"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "charges" ADD CONSTRAINT "FK_1bbbadfc7be9d36bcbe0e920cc6" FOREIGN KEY ("paymentMethodId") REFERENCES "payment_method"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "commercial_payment" ADD CONSTRAINT "FK_71a5e30c3a3c7c257b6caf2d955" FOREIGN KEY ("bankId") REFERENCES "bank"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "commercial_payment" ADD CONSTRAINT "FK_efc151d4e14a471dc479d40cd75" FOREIGN KEY ("paymentMethodId") REFERENCES "payment_method"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "commercial_payment" ADD CONSTRAINT "FK_0756da734b7db55bf91b822f105" FOREIGN KEY ("stateId") REFERENCES "state"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "commercial_payment" ADD CONSTRAINT "FK_b1b7179155407b39b724d2f7f08" FOREIGN KEY ("commercialId") REFERENCES "commercial"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "department_pay" ADD CONSTRAINT "FK_0bd42645dc6f7c6ae2e18abeb8c" FOREIGN KEY ("departmentId") REFERENCES "department"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_fb76bf2f52ca15e599f50bb34ae" FOREIGN KEY ("paymentMethodId") REFERENCES "payment_method"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_f4dfc6b2440277579284114fc1e" FOREIGN KEY ("commercialId") REFERENCES "commercial"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "xls_file" ADD CONSTRAINT "FK_109555e2081bb7848ebce8f0216" FOREIGN KEY ("stateId") REFERENCES "state"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "option_closure" ADD CONSTRAINT "FK_fd3caea6fe0fdd5d3e0929d1b3f" FOREIGN KEY ("id_ancestor") REFERENCES "option"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "option_closure" ADD CONSTRAINT "FK_f76ce66cb50f6aae338016e41d9" FOREIGN KEY ("id_descendant") REFERENCES "option"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "option_closure" DROP CONSTRAINT "FK_f76ce66cb50f6aae338016e41d9"`);
        await queryRunner.query(`ALTER TABLE "option_closure" DROP CONSTRAINT "FK_fd3caea6fe0fdd5d3e0929d1b3f"`);
        await queryRunner.query(`ALTER TABLE "xls_file" DROP CONSTRAINT "FK_109555e2081bb7848ebce8f0216"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_f4dfc6b2440277579284114fc1e"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_fb76bf2f52ca15e599f50bb34ae"`);
        await queryRunner.query(`ALTER TABLE "department_pay" DROP CONSTRAINT "FK_0bd42645dc6f7c6ae2e18abeb8c"`);
        await queryRunner.query(`ALTER TABLE "commercial_payment" DROP CONSTRAINT "FK_b1b7179155407b39b724d2f7f08"`);
        await queryRunner.query(`ALTER TABLE "commercial_payment" DROP CONSTRAINT "FK_0756da734b7db55bf91b822f105"`);
        await queryRunner.query(`ALTER TABLE "commercial_payment" DROP CONSTRAINT "FK_efc151d4e14a471dc479d40cd75"`);
        await queryRunner.query(`ALTER TABLE "commercial_payment" DROP CONSTRAINT "FK_71a5e30c3a3c7c257b6caf2d955"`);
        await queryRunner.query(`ALTER TABLE "charges" DROP CONSTRAINT "FK_1bbbadfc7be9d36bcbe0e920cc6"`);
        await queryRunner.query(`ALTER TABLE "charges" DROP CONSTRAINT "FK_8211bae623dccba30c5bdd538a1"`);
        await queryRunner.query(`ALTER TABLE "charges" DROP CONSTRAINT "FK_44c6324c0516c84c2af6925479f"`);
        await queryRunner.query(`ALTER TABLE "charges" DROP CONSTRAINT "FK_fb99f10f1b89f3f3c9d77f0958c"`);
        await queryRunner.query(`ALTER TABLE "charges" DROP CONSTRAINT "FK_f263633fb0c31efe64ddd2db256"`);
        await queryRunner.query(`ALTER TABLE "charges" DROP CONSTRAINT "FK_5598088f9b4c31308a35ab3175b"`);
        await queryRunner.query(`ALTER TABLE "charges" DROP CONSTRAINT "FK_36e9bc15d63f491c54c345b7738"`);
        await queryRunner.query(`ALTER TABLE "charges" DROP CONSTRAINT "FK_7836e773f1549f5890ec2aafb3b"`);
        await queryRunner.query(`ALTER TABLE "cashier_payment" DROP CONSTRAINT "FK_7bb5f2cf3346495f0a0966c733d"`);
        await queryRunner.query(`ALTER TABLE "cashier_payment" DROP CONSTRAINT "FK_e39dc438723249a00e84b356e8d"`);
        await queryRunner.query(`ALTER TABLE "cashier" DROP CONSTRAINT "FK_aefe7e456026b84732ed7edc98d"`);
        await queryRunner.query(`ALTER TABLE "cashier" DROP CONSTRAINT "FK_de135e36ae671a853e9cea66690"`);
        await queryRunner.query(`ALTER TABLE "cashier" DROP CONSTRAINT "FK_1d95a2011272afd6a95210f6535"`);
        await queryRunner.query(`ALTER TABLE "cashier" DROP CONSTRAINT "FK_75deea0c4caf43ba3b6c53987e3"`);
        await queryRunner.query(`ALTER TABLE "cashier" DROP CONSTRAINT "FK_f8506c17ca5cfd69134a8d54fb8"`);
        await queryRunner.query(`ALTER TABLE "commercial_cashbox" DROP CONSTRAINT "FK_71e09545e0b640e4bade877f698"`);
        await queryRunner.query(`ALTER TABLE "commercial_cashbox" DROP CONSTRAINT "FK_b34f0934cb67d841eece13fd065"`);
        await queryRunner.query(`ALTER TABLE "attention_days" DROP CONSTRAINT "FK_974da6a4406896e0dd85f62576a"`);
        await queryRunner.query(`ALTER TABLE "attention_days" DROP CONSTRAINT "FK_a2e56659d42c1752ff6a87885ce"`);
        await queryRunner.query(`ALTER TABLE "commercial" DROP CONSTRAINT "FK_67f64de251b013f65023a4f6283"`);
        await queryRunner.query(`ALTER TABLE "commercial" DROP CONSTRAINT "FK_68af99d044de3a56a76310d3f0b"`);
        await queryRunner.query(`ALTER TABLE "commercial" DROP CONSTRAINT "FK_96519666e75c9734c152e64e2b7"`);
        await queryRunner.query(`ALTER TABLE "city" DROP CONSTRAINT "FK_95959bed787b5e4fd4be4e94fc5"`);
        await queryRunner.query(`ALTER TABLE "password_history" DROP CONSTRAINT "FK_20c510e5ca12f63b0c915c3e2df"`);
        await queryRunner.query(`ALTER TABLE "profile_report" DROP CONSTRAINT "FK_2a82bd16ea4f72e6f900db29eed"`);
        await queryRunner.query(`ALTER TABLE "profile_report" DROP CONSTRAINT "FK_cc64c5baf7f4a88a4d737f111a6"`);
        await queryRunner.query(`ALTER TABLE "admin_report" DROP CONSTRAINT "FK_e65938f392a49a5686e4188c247"`);
        await queryRunner.query(`ALTER TABLE "params" DROP CONSTRAINT "FK_6501d81725e2b9df1aea038e1f4"`);
        await queryRunner.query(`ALTER TABLE "audit" DROP CONSTRAINT "FK_03685c4b397ab3fee9de97673f4"`);
        await queryRunner.query(`ALTER TABLE "audit" DROP CONSTRAINT "FK_7ae389e858ad6f2c0c63112e387"`);
        await queryRunner.query(`ALTER TABLE "audit_access" DROP CONSTRAINT "FK_d6e6196a54bb64cb4014068b174"`);
        await queryRunner.query(`ALTER TABLE "audit_access" DROP CONSTRAINT "FK_b625212b77f2d6153f01e82a4c7"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_9466682df91534dd95e4dbaa616"`);
        await queryRunner.query(`ALTER TABLE "user_password" DROP CONSTRAINT "FK_e15d9db04d04eb59c6597697c50"`);
        await queryRunner.query(`ALTER TABLE "user_password" DROP CONSTRAINT "FK_3e755bee2cdcee50a9e742776d8"`);
        await queryRunner.query(`ALTER TABLE "profile" DROP CONSTRAINT "FK_53b3cc51b5b38e7e5609ea49a0a"`);
        await queryRunner.query(`ALTER TABLE "option_profile" DROP CONSTRAINT "FK_17eb01a8dbb7f212821faa1703e"`);
        await queryRunner.query(`ALTER TABLE "option_profile" DROP CONSTRAINT "FK_df34371ad87c5a7b403ce8e7836"`);
        await queryRunner.query(`ALTER TABLE "option" DROP CONSTRAINT "FK_18c19c0a19ad349cf6678fd69c8"`);
        await queryRunner.query(`DROP INDEX "IDX_f76ce66cb50f6aae338016e41d"`);
        await queryRunner.query(`DROP INDEX "IDX_fd3caea6fe0fdd5d3e0929d1b3"`);
        await queryRunner.query(`DROP TABLE "option_closure"`);
        await queryRunner.query(`DROP TABLE "xls_file"`);
        await queryRunner.query(`DROP TABLE "payment"`);
        await queryRunner.query(`DROP TABLE "department_pay"`);
        await queryRunner.query(`DROP TABLE "commercial_payment"`);
        await queryRunner.query(`DROP TABLE "charges"`);
        await queryRunner.query(`DROP TABLE "department"`);
        await queryRunner.query(`DROP TABLE "cashier_payment"`);
        await queryRunner.query(`DROP TABLE "payment_method"`);
        await queryRunner.query(`DROP TABLE "cashier"`);
        await queryRunner.query(`DROP TABLE "identity_document"`);
        await queryRunner.query(`DROP TABLE "commercial_cashbox"`);
        await queryRunner.query(`DROP TABLE "cash_box"`);
        await queryRunner.query(`DROP TABLE "bank"`);
        await queryRunner.query(`DROP TABLE "attention_days"`);
        await queryRunner.query(`DROP TABLE "commercial"`);
        await queryRunner.query(`DROP TABLE "state"`);
        await queryRunner.query(`DROP TABLE "business_type"`);
        await queryRunner.query(`DROP TABLE "city"`);
        await queryRunner.query(`DROP TABLE "province"`);
        await queryRunner.query(`DROP TABLE "days"`);
        await queryRunner.query(`DROP TABLE "password_history"`);
        await queryRunner.query(`DROP TABLE "profile_report"`);
        await queryRunner.query(`DROP TABLE "admin_report"`);
        await queryRunner.query(`DROP TABLE "admin_module"`);
        await queryRunner.query(`DROP TABLE "params"`);
        await queryRunner.query(`DROP TABLE "email_server"`);
        await queryRunner.query(`DROP TABLE "audit"`);
        await queryRunner.query(`DROP TABLE "audit_access"`);
        await queryRunner.query(`DROP TABLE "audit_action"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TABLE "user_password"`);
        await queryRunner.query(`DROP TABLE "password_period"`);
        await queryRunner.query(`DROP TABLE "profile"`);
        await queryRunner.query(`DROP TABLE "option_profile"`);
        await queryRunner.query(`DROP TABLE "option"`);
        await queryRunner.query(`DROP TABLE "password_rules"`);
    }

}
